#pragma checksum "C:\Users\TomCC\source\repos\BlazorTest\BlazorTest.WebApplication1\BlazorTest.WebApplication1.App\Pages\QuickDockColumnContainer.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "23fdba6236ce3bcaace6fcb7b5212f0a344d6d6d"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorTest.WebApplication1.App.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTest.WebApplication1.App;
    using BlazorTest.WebApplication1.App.Shared;
    using Microsoft.Extensions.Logging;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]

    public class QuickDockColumnContainer : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 13 "C:\Users\TomCC\source\repos\BlazorTest\BlazorTest.WebApplication1\BlazorTest.WebApplication1.App\Pages\QuickDockColumnContainer.cshtml"
            
    [CascadingParameter] protected QuickDockConfig Config { get; set; }
    [Parameter] protected List<QuickDockContent> Contents { get; set; }

    long? split = null;

    private string CalcSplit()
    {
        return split != null ? $"{split}px" : "auto";
    }

    public string GetGridStyle()
    {
        string rows = $"{CalcSplit()} 5px auto";
        //var rows = string.Join(" 5px ", Enumerable.Repeat("auto", Contents.Count));
        return $"height: 100%; display: grid; grid-template-columns: auto; grid-template-rows: {rows}";
    }

    public void OnMouseDown(UIMouseEventArgs e)
    {
        Config.Input.MouseMove += OnMouseMove;
        Config.Input.MouseUp += OnMouseUp;
    }

    public void OnMouseMove(UIMouseEventArgs e)
    {
        split = e.ClientY - Config.MainContainerRect.y;
    }

    public void OnMouseUp(UIMouseEventArgs e)
    {
        Config.Input.MouseMove -= OnMouseMove;
        Config.Input.MouseUp -= OnMouseUp;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILogger<QuickDockColumnContainer> logger { get; set; }
    }
}
#pragma warning restore 1591
